// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Req.InputOrderAction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Evelynn.Base.Proto {

  /// <summary>Holder for reflection information generated from Req.InputOrderAction.proto</summary>
  public static partial class ReqInputOrderActionReflection {

    #region Descriptor
    /// <summary>File descriptor for Req.InputOrderAction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReqInputOrderActionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpSZXEuSW5wdXRPcmRlckFjdGlvbi5wcm90bxIDcmVxIuABChVJbnB1dE9y",
            "ZGVyQWN0aW9uRmllbGQSEQoJYnJva2VyX2lkGAEgASgJEhMKC2ludmVzdG9y",
            "X2lkGAIgASgJEg8KB3VzZXJfaWQYAyABKAkSFQoNaW5zdHJ1bWVudF9pZBgE",
            "IAEoCRITCgtleGNoYW5nZV9pZBgFIAEoCRIUCgxvcmRlcl9zeXNfaWQYBiAB",
            "KAkSEQoJb3JkZXJfcmVmGAcgASgJEhAKCGZyb250X2lkGAggASgFEhIKCnNl",
            "c3Npb25faWQYCSABKAUSEwoLYWN0aW9uX2ZsYWcYCiABKAVCSAoVaW8uZXZl",
            "bHlubi5iYXNlLnByb3RvQhpJbnB1dE9yZGVyQWN0aW9uRmllbGRQcm90b6oC",
            "EkV2ZWx5bm4uQmFzZS5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Evelynn.Base.Proto.InputOrderActionField), global::Evelynn.Base.Proto.InputOrderActionField.Parser, new[]{ "BrokerId", "InvestorId", "UserId", "InstrumentId", "ExchangeId", "OrderSysId", "OrderRef", "FrontId", "SessionId", "ActionFlag" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InputOrderActionField : pb::IMessage<InputOrderActionField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputOrderActionField> _parser = new pb::MessageParser<InputOrderActionField>(() => new InputOrderActionField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputOrderActionField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Evelynn.Base.Proto.ReqInputOrderActionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOrderActionField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOrderActionField(InputOrderActionField other) : this() {
      brokerId_ = other.brokerId_;
      investorId_ = other.investorId_;
      userId_ = other.userId_;
      instrumentId_ = other.instrumentId_;
      exchangeId_ = other.exchangeId_;
      orderSysId_ = other.orderSysId_;
      orderRef_ = other.orderRef_;
      frontId_ = other.frontId_;
      sessionId_ = other.sessionId_;
      actionFlag_ = other.actionFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOrderActionField Clone() {
      return new InputOrderActionField(this);
    }

    /// <summary>Field number for the "broker_id" field.</summary>
    public const int BrokerIdFieldNumber = 1;
    private string brokerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrokerId {
      get { return brokerId_; }
      set {
        brokerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "investor_id" field.</summary>
    public const int InvestorIdFieldNumber = 2;
    private string investorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvestorId {
      get { return investorId_; }
      set {
        investorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 4;
    private string instrumentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange_id" field.</summary>
    public const int ExchangeIdFieldNumber = 5;
    private string exchangeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_sys_id" field.</summary>
    public const int OrderSysIdFieldNumber = 6;
    private string orderSysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderSysId {
      get { return orderSysId_; }
      set {
        orderSysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_ref" field.</summary>
    public const int OrderRefFieldNumber = 7;
    private string orderRef_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderRef {
      get { return orderRef_; }
      set {
        orderRef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "front_id" field.</summary>
    public const int FrontIdFieldNumber = 8;
    private int frontId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrontId {
      get { return frontId_; }
      set {
        frontId_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 9;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "action_flag" field.</summary>
    public const int ActionFlagFieldNumber = 10;
    private int actionFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionFlag {
      get { return actionFlag_; }
      set {
        actionFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputOrderActionField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputOrderActionField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrokerId != other.BrokerId) return false;
      if (InvestorId != other.InvestorId) return false;
      if (UserId != other.UserId) return false;
      if (InstrumentId != other.InstrumentId) return false;
      if (ExchangeId != other.ExchangeId) return false;
      if (OrderSysId != other.OrderSysId) return false;
      if (OrderRef != other.OrderRef) return false;
      if (FrontId != other.FrontId) return false;
      if (SessionId != other.SessionId) return false;
      if (ActionFlag != other.ActionFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BrokerId.Length != 0) hash ^= BrokerId.GetHashCode();
      if (InvestorId.Length != 0) hash ^= InvestorId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (ExchangeId.Length != 0) hash ^= ExchangeId.GetHashCode();
      if (OrderSysId.Length != 0) hash ^= OrderSysId.GetHashCode();
      if (OrderRef.Length != 0) hash ^= OrderRef.GetHashCode();
      if (FrontId != 0) hash ^= FrontId.GetHashCode();
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (ActionFlag != 0) hash ^= ActionFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BrokerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrokerId);
      }
      if (InvestorId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InvestorId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentId);
      }
      if (ExchangeId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExchangeId);
      }
      if (OrderSysId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderSysId);
      }
      if (OrderRef.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OrderRef);
      }
      if (FrontId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FrontId);
      }
      if (SessionId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SessionId);
      }
      if (ActionFlag != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActionFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BrokerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrokerId);
      }
      if (InvestorId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InvestorId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentId);
      }
      if (ExchangeId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExchangeId);
      }
      if (OrderSysId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderSysId);
      }
      if (OrderRef.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OrderRef);
      }
      if (FrontId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FrontId);
      }
      if (SessionId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SessionId);
      }
      if (ActionFlag != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActionFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BrokerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrokerId);
      }
      if (InvestorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvestorId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (ExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExchangeId);
      }
      if (OrderSysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderSysId);
      }
      if (OrderRef.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderRef);
      }
      if (FrontId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrontId);
      }
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (ActionFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputOrderActionField other) {
      if (other == null) {
        return;
      }
      if (other.BrokerId.Length != 0) {
        BrokerId = other.BrokerId;
      }
      if (other.InvestorId.Length != 0) {
        InvestorId = other.InvestorId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.ExchangeId.Length != 0) {
        ExchangeId = other.ExchangeId;
      }
      if (other.OrderSysId.Length != 0) {
        OrderSysId = other.OrderSysId;
      }
      if (other.OrderRef.Length != 0) {
        OrderRef = other.OrderRef;
      }
      if (other.FrontId != 0) {
        FrontId = other.FrontId;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.ActionFlag != 0) {
        ActionFlag = other.ActionFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BrokerId = input.ReadString();
            break;
          }
          case 18: {
            InvestorId = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            InstrumentId = input.ReadString();
            break;
          }
          case 42: {
            ExchangeId = input.ReadString();
            break;
          }
          case 50: {
            OrderSysId = input.ReadString();
            break;
          }
          case 58: {
            OrderRef = input.ReadString();
            break;
          }
          case 64: {
            FrontId = input.ReadInt32();
            break;
          }
          case 72: {
            SessionId = input.ReadInt32();
            break;
          }
          case 80: {
            ActionFlag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BrokerId = input.ReadString();
            break;
          }
          case 18: {
            InvestorId = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            InstrumentId = input.ReadString();
            break;
          }
          case 42: {
            ExchangeId = input.ReadString();
            break;
          }
          case 50: {
            OrderSysId = input.ReadString();
            break;
          }
          case 58: {
            OrderRef = input.ReadString();
            break;
          }
          case 64: {
            FrontId = input.ReadInt32();
            break;
          }
          case 72: {
            SessionId = input.ReadInt32();
            break;
          }
          case 80: {
            ActionFlag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
